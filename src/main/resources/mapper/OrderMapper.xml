<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sdut.onlinestore.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.sdut.onlinestore.pojo.Order">
        <id column="oid" property="oid" jdbcType="VARCHAR"/>
        <result column="uid" property="uid" jdbcType="VARCHAR"/>
        <result column="ordertime" property="ordertime" jdbcType="TIMESTAMP"/>
        <result column="total" property="total" jdbcType="DOUBLE"/>
        <result column="state" property="state" jdbcType="INTEGER"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="telephone" property="telephone" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    oid, uid, ordertime, total, state, address, telephone
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sdut.onlinestore.pojo.OrderExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from order
        where oid = #{oid,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from order
    where oid = #{oid,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.sdut.onlinestore.pojo.OrderExample">
        delete from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.sdut.onlinestore.pojo.Order">
    insert into `order` (oid, uid, ordertime,
      total, state, address, 
      telephone)
    values (#{oid,jdbcType=VARCHAR}, #{user.uid,jdbcType=VARCHAR}, #{ordertime,jdbcType=TIMESTAMP},
      #{total,jdbcType=DOUBLE}, #{state,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.sdut.onlinestore.pojo.Order">
        insert into `order`
        <trim prefix="( " suffix=" )" suffixOverrides=",">
            <if test="oid != null">
                oid ,
            </if>
            <if test="user.uid != null">
                uid ,
            </if>
            <if test="ordertime != null">
                ordertime ,
            </if>
            <if test="total != null">
                total,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="telephone != null">
                telephone,
            </if>
        </trim>

        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="oid != null">
                #{oid,jdbcType=VARCHAR},
            </if>

            <if test="user.uid != null">
                #{user.uid, jdbcType=VARCHAR},
            </if>
            <if test="ordertime != null">
                #{ordertime,jdbcType=TIMESTAMP},
            </if>
            <if test="total != null">
                #{total,jdbcType=DOUBLE},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                #{telephone,jdbcType=VARCHAR},
            </if>
        </trim>

    </insert>
    <select id="countByExample" parameterType="com.sdut.onlinestore.pojo.OrderExample" resultType="java.lang.Integer">
        select count(*) from order
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update order
        <set>
            <if test="record.oid != null">
                oid = #{record.oid,jdbcType=VARCHAR},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=VARCHAR},
            </if>
            <if test="record.ordertime != null">
                ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.total != null">
                total = #{record.total,jdbcType=DOUBLE},
            </if>
            <if test="record.state != null">
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.address != null">
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.telephone != null">
                telephone = #{record.telephone,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update order
        set oid = #{record.oid,jdbcType=VARCHAR},
        uid = #{record.uid,jdbcType=VARCHAR},
        ordertime = #{record.ordertime,jdbcType=TIMESTAMP},
        total = #{record.total,jdbcType=DOUBLE},
        state = #{record.state,jdbcType=INTEGER},
        address = #{record.address,jdbcType=VARCHAR},
        telephone = #{record.telephone,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sdut.onlinestore.pojo.Order">
        update `order`
        <set>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="ordertime != null">
                ordertime = #{ordertime,jdbcType=TIMESTAMP},
            </if>
            <if test="total != null">
                total = #{total,jdbcType=DOUBLE},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="telephone != null">
                telephone = #{telephone,jdbcType=VARCHAR},
            </if>
        </set>
        where oid = #{oid,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sdut.onlinestore.pojo.Order">
    update order
    set uid = #{uid,jdbcType=VARCHAR},
      ordertime = #{ordertime,jdbcType=TIMESTAMP},
      total = #{total,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR}
    where oid = #{oid,jdbcType=VARCHAR}
  </update>
</mapper>